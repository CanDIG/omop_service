# Generated by Django 3.1.4 on 2021-03-30 03:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CareSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('care_site_id', models.CharField(max_length=200, unique=True)),
                ('care_site_name', models.CharField(blank=True, max_length=500, null=True)),
                ('care_site_source_value', models.CharField(blank=True, max_length=200)),
                ('place_of_service_source_value', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='CdmSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdm_source_name', models.CharField(max_length=255)),
                ('cdm_source_abbreviation', models.CharField(blank=True, max_length=200)),
                ('cdm_holder', models.CharField(blank=True, max_length=500)),
                ('source_description', models.TextField(blank=True)),
                ('source_documentation_reference', models.CharField(blank=True, max_length=255)),
                ('cdm_etl_reference', models.CharField(blank=True, max_length=255)),
                ('source_release_date', models.DateField(blank=True, null=True)),
                ('cdm_release_date', models.DateField(blank=True, null=True)),
                ('cdm_version', models.CharField(blank=True, max_length=200)),
                ('vocabulary_version', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('concept_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('concept_name', models.CharField(blank=True, max_length=255)),
                ('standard_concept', models.CharField(blank=True, choices=[('S', 'S'), ('C', 'C')], max_length=2, null=True)),
                ('concept_code', models.CharField(blank=True, max_length=200)),
                ('valid_start_date', models.DateField(blank=True, null=True)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, choices=[('D', 'D'), ('U', 'U')], max_length=2, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_id', models.CharField(max_length=200, unique=True)),
                ('address_1', models.CharField(blank=True, max_length=200)),
                ('address_2', models.CharField(blank=True, max_length=200)),
                ('city', models.CharField(blank=True, max_length=200)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('zip', models.CharField(blank=True, max_length=50, null=True)),
                ('county', models.CharField(blank=True, max_length=200)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('location_source_value', models.CharField(blank=True, max_length=200)),
                ('latitude', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_id', models.CharField(max_length=200, unique=True)),
                ('note_date', models.DateField(blank=True, null=True)),
                ('note_datetime', models.DateTimeField(blank=True, null=True)),
                ('note_title', models.CharField(blank=True, max_length=250)),
                ('note_text', models.TextField(blank=True)),
                ('note_source_value', models.CharField(blank=True, max_length=200)),
                ('encoding_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_encoding_concept', to='data_tables.concept')),
                ('language_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_language_concept', to='data_tables.concept')),
                ('note_class_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_note_class_concept', to='data_tables.concept')),
                ('note_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_note_type_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('person_id', models.CharField(max_length=200, unique=True)),
                ('year_of_birth', models.IntegerField(blank=True, null=True)),
                ('month_of_birth', models.IntegerField(blank=True, null=True)),
                ('day_of_birth', models.IntegerField(blank=True, null=True)),
                ('birth_datetime', models.DateTimeField(blank=True, null=True)),
                ('death_datetime', models.DateTimeField(blank=True, null=True)),
                ('person_source_value', models.CharField(blank=True, max_length=200)),
                ('gender_source_value', models.CharField(blank=True, max_length=200)),
                ('race_source_value', models.CharField(blank=True, max_length=200)),
                ('ethnicity_source_value', models.CharField(blank=True, max_length=200)),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.caresite')),
                ('ethnicity_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_ethnicity_concept', to='data_tables.concept')),
                ('ethnicity_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_ethnicity_source_concept', to='data_tables.concept')),
                ('gender_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_gender_concept', to='data_tables.concept')),
                ('gender_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_gender_source_concept', to='data_tables.concept')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.location')),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_id', models.CharField(max_length=200, unique=True)),
                ('provider_name', models.CharField(blank=True, max_length=500, null=True)),
                ('npi', models.CharField(blank=True, max_length=200)),
                ('dea', models.CharField(blank=True, max_length=200)),
                ('year_of_birth', models.IntegerField(blank=True, null=True)),
                ('provider_source_value', models.CharField(blank=True, max_length=200)),
                ('specialty_source_value', models.CharField(blank=True, max_length=200)),
                ('gender_source_value', models.CharField(blank=True, max_length=200)),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.caresite')),
                ('gender_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider_gender_concept', to='data_tables.concept')),
                ('gender_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider_gender_source_concept', to='data_tables.concept')),
                ('specialty_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider_specialty_concept', to='data_tables.concept')),
                ('specialty_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='provider_specialty_source_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('vocabulary_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('vocabulary_name', models.CharField(blank=True, max_length=255)),
                ('vocabulary_reference', models.CharField(blank=True, max_length=255)),
                ('vocabulary_version', models.CharField(blank=True, max_length=255, null=True)),
                ('vocabulary_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vocabulary_vocabulary_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='VisitOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_occurrence_id', models.CharField(max_length=200, unique=True)),
                ('visit_start_date', models.DateField(blank=True, null=True)),
                ('visit_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_end_date', models.DateField(blank=True, null=True)),
                ('visit_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_source_value', models.CharField(blank=True, max_length=200)),
                ('admitted_from_source_value', models.CharField(blank=True, max_length=200)),
                ('discharge_to_source_value', models.CharField(blank=True, max_length=200)),
                ('admitted_from_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_occurrence_admitted_from_concept', to='data_tables.concept')),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.caresite')),
                ('discharge_to_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_occurrence_discharge_to_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('preceding_visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('visit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_occurrence_visit_concept', to='data_tables.concept')),
                ('visit_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_occurrence_visit_source_concept', to='data_tables.concept')),
                ('visit_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_occurrence_visit_type_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='VisitDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_detail_id', models.CharField(max_length=200, unique=True)),
                ('visit_detail_start_date', models.DateField(blank=True, null=True)),
                ('visit_detail_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_detail_end_date', models.DateField(blank=True, null=True)),
                ('visit_detail_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('admitted_from_source_value', models.CharField(blank=True, max_length=200)),
                ('visit_detail_source_value', models.CharField(blank=True, max_length=200)),
                ('discharge_to_source_value', models.CharField(blank=True, max_length=200)),
                ('admitted_from_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_admitted_from_concept', to='data_tables.concept')),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.caresite')),
                ('discharge_to_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_discharge_to_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('preceding_visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_visit_detail_preceding_visit_detail', to='data_tables.visitdetail')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('visit_detail_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_visit_detail_concept', to='data_tables.concept')),
                ('visit_detail_parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_visit_detail_visit_detail_parent', to='data_tables.visitdetail')),
                ('visit_detail_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_visit_detail_source_concept', to='data_tables.concept')),
                ('visit_detail_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visit_detail_visit_detail_type_concept', to='data_tables.concept')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyConduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('survey_conduct_id', models.CharField(max_length=200, unique=True)),
                ('survey_start_date', models.DateField(blank=True, null=True)),
                ('survey_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('survey_end_date', models.DateField(blank=True, null=True)),
                ('survey_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('assisted_source_value', models.CharField(blank=True, max_length=200)),
                ('respondent_type_source_value', models.CharField(blank=True, max_length=200)),
                ('timing_source_value', models.CharField(blank=True, max_length=200)),
                ('collection_method_source_value', models.CharField(blank=True, max_length=200)),
                ('survey_source_value', models.CharField(blank=True, max_length=200)),
                ('survey_source_identifier', models.CharField(blank=True, max_length=200)),
                ('validated_survey_source_value', models.CharField(blank=True, max_length=200)),
                ('survey_version_number', models.CharField(blank=True, max_length=200)),
                ('assisted_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_assisted_concept', to='data_tables.concept')),
                ('collection_method_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_collection_method_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('respondent_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_respondent_type_concept', to='data_tables.concept')),
                ('response_visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_response_visit_occurrence', to='data_tables.visitoccurrence')),
                ('survey_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_survey_concept', to='data_tables.concept')),
                ('survey_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_survey_source_concept', to='data_tables.concept')),
                ('timing_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_timing_concept', to='data_tables.concept')),
                ('validated_survey_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_validated_survey_concept', to='data_tables.concept')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='survey_conduct_visit_occurrence', to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='Specimen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specimen_id', models.CharField(max_length=200, unique=True)),
                ('specimen_date', models.DateField(blank=True, null=True)),
                ('specimen_datetime', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('specimen_source_id', models.CharField(blank=True, max_length=200)),
                ('specimen_source_value', models.CharField(blank=True, max_length=200)),
                ('unit_source_value', models.CharField(blank=True, max_length=200)),
                ('anatomic_site_source_value', models.CharField(blank=True, max_length=200)),
                ('disease_status_source_value', models.CharField(blank=True, max_length=200)),
                ('anatomic_site_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specimen_anatomic_site_concept', to='data_tables.concept')),
                ('disease_status_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specimen_disease_status_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('specimen_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specimen_specimen_concept', to='data_tables.concept')),
                ('specimen_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specimen_specimen_type_concept', to='data_tables.concept')),
                ('unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='specimen_unit_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='SourceToConceptMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_code', models.CharField(blank=True, max_length=200)),
                ('source_code_description', models.CharField(blank=True, max_length=500)),
                ('valid_start_date', models.DateField(blank=True, null=True)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, choices=[('D', 'D'), ('U', 'U')], max_length=2, null=True)),
                ('source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_to_map_source_concept', to='data_tables.concept')),
                ('source_vocabulary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_to_map_source_vocabulary', to='data_tables.vocabulary')),
                ('target_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_to_map_target_concept', to='data_tables.concept')),
                ('target_vocabulary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_to_map_target_vocabulary', to='data_tables.vocabulary')),
            ],
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('relationship_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('relationship_name', models.CharField(blank=True, max_length=255)),
                ('is_hierarchical', models.BooleanField()),
                ('defines_ancestry', models.BooleanField()),
                ('relationship_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept')),
                ('reverse_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.relationship')),
            ],
        ),
        migrations.CreateModel(
            name='ProcedureOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procedure_occurrence_id', models.CharField(max_length=200, unique=True)),
                ('procedure_date', models.DateField(blank=True, null=True)),
                ('procedure_datetime', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('procedure_source_value', models.CharField(blank=True, max_length=200)),
                ('modifier_source_value', models.CharField(blank=True, max_length=200)),
                ('modifier_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedure_occurrence_modifier_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('procedure_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedure_occurrence_procedure_concept', to='data_tables.concept')),
                ('procedure_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedure_occurrence_procedure_source_concept', to='data_tables.concept')),
                ('procedure_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='procedure_occurrence_procedure_type_concept', to='data_tables.concept')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.AddField(
            model_name='person',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider'),
        ),
        migrations.AddField(
            model_name='person',
            name='race_concept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_race_concept', to='data_tables.concept'),
        ),
        migrations.AddField(
            model_name='person',
            name='race_source_concept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person_race_source_concept', to='data_tables.concept'),
        ),
        migrations.CreateModel(
            name='PayerPlanPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payer_plan_period_id', models.CharField(max_length=200, unique=True)),
                ('payer_plan_period_start_date', models.DateField(blank=True, null=True)),
                ('payer_plan_period_end_date', models.DateField(blank=True, null=True)),
                ('payer_source_value', models.CharField(blank=True, max_length=200)),
                ('plan_source_value', models.CharField(blank=True, max_length=200)),
                ('contract_source_value', models.CharField(blank=True, max_length=200)),
                ('sponsor_source_value', models.CharField(blank=True, max_length=200)),
                ('family_source_value', models.CharField(blank=True, max_length=200)),
                ('stop_reason_source_value', models.CharField(blank=True, max_length=200)),
                ('contract_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_contract_concept', to='data_tables.concept')),
                ('contract_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_contract_person', to='data_tables.person')),
                ('contract_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_contract_source_concept', to='data_tables.concept')),
                ('payer_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_payer_concept', to='data_tables.concept')),
                ('payer_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_payer_source_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payer_plan_period_person', to='data_tables.person')),
                ('plan_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_plan_concept', to='data_tables.concept')),
                ('plan_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_plan_source_concept', to='data_tables.concept')),
                ('sponsor_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_sponsor_concept', to='data_tables.concept')),
                ('sponsor_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_sponsor_source_concept', to='data_tables.concept')),
                ('stop_reason_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_stop_reason_concept', to='data_tables.concept')),
                ('stop_reason_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payer_plan_period_stop_reason_source_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_period_id', models.CharField(max_length=200, unique=True)),
                ('observation_period_start_date', models.DateField(blank=True, null=True)),
                ('observation_period_end_date', models.DateField(blank=True, null=True)),
                ('period_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
            ],
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_id', models.CharField(max_length=200, unique=True)),
                ('observation_date', models.DateField(blank=True, null=True)),
                ('observation_datetime', models.DateTimeField(blank=True, null=True)),
                ('value_as_number', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('value_as_string', models.CharField(blank=True, max_length=200)),
                ('observation_source_value', models.CharField(blank=True, max_length=200)),
                ('unit_source_value', models.CharField(blank=True, max_length=200)),
                ('qualifier_source_value', models.CharField(blank=True, max_length=200)),
                ('value_as_datetime', models.DateTimeField(blank=True, null=True)),
                ('obs_event_field_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_obs_event_field_concept', to='data_tables.concept')),
                ('observation_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_observation_concept', to='data_tables.concept')),
                ('observation_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.procedureoccurrence')),
                ('observation_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_observation_source_concept', to='data_tables.concept')),
                ('observation_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_observation_type_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('qualifier_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_qualifier_concept', to='data_tables.concept')),
                ('unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_unit_concept', to='data_tables.concept')),
                ('value_as_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observation_value_as_concept', to='data_tables.concept')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='NoteNlp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_nlp_id', models.CharField(max_length=200, unique=True)),
                ('snippet', models.CharField(blank=True, max_length=250)),
                ('offset', models.CharField(blank=True, max_length=250)),
                ('lexical_variant', models.CharField(max_length=250)),
                ('nlp_system', models.CharField(blank=True, max_length=250)),
                ('nlp_date', models.DateField(blank=True, null=True)),
                ('nlp_datetime', models.DateTimeField(blank=True, null=True)),
                ('term_exists', models.CharField(blank=True, max_length=1)),
                ('term_temporal', models.CharField(blank=True, max_length=200)),
                ('term_modifiers', models.CharField(blank=True, max_length=2000)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.note')),
                ('note_nlp_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_nlp_note_nlp_concept', to='data_tables.concept')),
                ('note_nlp_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_nlp_note_nlp_source_concept', to='data_tables.concept')),
                ('section_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='note_nlp_section_concept', to='data_tables.concept')),
            ],
        ),
        migrations.AddField(
            model_name='note',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person'),
        ),
        migrations.AddField(
            model_name='note',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider'),
        ),
        migrations.AddField(
            model_name='note',
            name='visit_detail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail'),
        ),
        migrations.AddField(
            model_name='note',
            name='visit_occurrence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence'),
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('value_as_string', models.TextField(blank=True)),
                ('metadata_date', models.DateField(blank=True, null=True)),
                ('metadata_datetime', models.DateTimeField(blank=True, null=True)),
                ('metadata_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_metadata_concept', to='data_tables.concept')),
                ('metadata_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_metadata_type_concept', to='data_tables.concept')),
                ('value_as_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='metadata_value_as_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_id', models.CharField(max_length=200, unique=True)),
                ('measurement_date', models.DateField(blank=True, null=True)),
                ('measurement_datetime', models.DateTimeField(blank=True, null=True)),
                ('value_as_number', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('range_low', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('range_high', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('measurement_source_value', models.CharField(blank=True, max_length=200)),
                ('unit_source_value', models.CharField(blank=True, max_length=200)),
                ('value_source_value', models.CharField(blank=True, max_length=200)),
                ('measurement_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurement_measurement_concept', to='data_tables.concept')),
                ('measurement_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurement_measurement_source_concept', to='data_tables.concept')),
                ('measurement_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurement_measurement_type_concept', to='data_tables.concept')),
                ('operator_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurement_operator_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurement_unit_concept', to='data_tables.concept')),
                ('value_as_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurement_value_as_concept', to='data_tables.concept')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='LocationHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_history_id', models.CharField(max_length=200, unique=True)),
                ('domain_id', models.CharField(blank=True, max_length=200)),
                ('entity_id', models.BigIntegerField(null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.location')),
                ('relationship_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='FactRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fact_id_1', models.BigIntegerField(null=True)),
                ('fact_id_2', models.BigIntegerField(null=True)),
                ('domain_concept_id_1', models.ForeignKey(db_column='domain_concept_id_1', on_delete=django.db.models.deletion.CASCADE, related_name='fact_relationship_domain_concept_id_1', to='data_tables.concept')),
                ('domain_concept_id_2', models.ForeignKey(db_column='domain_concept_id_2', on_delete=django.db.models.deletion.CASCADE, related_name='fact_relationship_domain_concept_id_2', to='data_tables.concept')),
                ('relationship_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fact_relationship_relationship_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='DrugStrength',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_value', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('numerator_value', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('denominator_value', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('box_size', models.IntegerField(blank=True, null=True)),
                ('valid_start_date', models.DateField(blank=True, null=True)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, choices=[('D', 'D'), ('U', 'U')], max_length=2, null=True)),
                ('amount_unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_strength_amount_unit_concept', to='data_tables.concept')),
                ('denominator_unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_strength_denominator_unit_concept', to='data_tables.concept')),
                ('drug_concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drug_strength_drug_concept', to='data_tables.concept')),
                ('ingredient_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_strength_ingredient_concept', to='data_tables.concept')),
                ('numerator_unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_strength_numerator_unit_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='DrugExposure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_exposure_id', models.CharField(max_length=200, unique=True)),
                ('drug_exposure_start_date', models.DateField(blank=True, null=True)),
                ('drug_exposure_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('drug_exposure_end_date', models.DateField(blank=True, null=True)),
                ('drug_exposure_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('verbatim_end_date', models.DateField(blank=True, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=200)),
                ('refills', models.IntegerField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('days_supply', models.IntegerField(blank=True, null=True)),
                ('sig', models.TextField(blank=True, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=200)),
                ('drug_source_value', models.CharField(blank=True, max_length=200)),
                ('route_source_value', models.CharField(blank=True, max_length=200)),
                ('dose_unit_source_value', models.CharField(blank=True, max_length=200)),
                ('drug_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_exposure_drug_concept', to='data_tables.concept')),
                ('drug_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_exposure_drug_source_concept', to='data_tables.concept')),
                ('drug_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_exposure_drug_type_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('route_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='drug_exposure_route_concept', to='data_tables.concept')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='DrugEra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_era_id', models.CharField(max_length=200, unique=True)),
                ('drug_era_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('drug_era_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('drug_exposure_count', models.IntegerField(blank=True, null=True)),
                ('gap_days', models.IntegerField(blank=True, null=True)),
                ('drug_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
            ],
        ),
        migrations.CreateModel(
            name='DoseEra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dose_era_id', models.CharField(max_length=200, unique=True)),
                ('dose_value', models.DecimalField(decimal_places=12, max_digits=20)),
                ('dose_era_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('dose_era_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('drug_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dose_era_drug_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('unit_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dose_era_unit_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('domain_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('domain_name', models.CharField(blank=True, max_length=255)),
                ('domain_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='domain_domain_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='DeviceExposure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_exposure_id', models.CharField(max_length=200, unique=True)),
                ('device_exposure_start_date', models.DateField(blank=True, null=True)),
                ('device_exposure_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('device_exposure_end_date', models.DateField(blank=True, null=True)),
                ('device_exposure_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('unique_device_id', models.CharField(blank=True, max_length=200)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('device_source_value', models.CharField(blank=True, max_length=200)),
                ('device_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_exposure_device_concept', to='data_tables.concept')),
                ('device_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_exposure_device_source_concept', to='data_tables.concept')),
                ('device_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='device_exposure_device_type_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_id', models.CharField(max_length=200, unique=True)),
                ('cost_event_id', models.BigIntegerField(null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=12, max_digits=20, null=True)),
                ('incurred_date', models.DateField(blank=True, null=True)),
                ('billed_date', models.DateField(blank=True, null=True)),
                ('paid_date', models.DateField(blank=True, null=True)),
                ('cost_source_value', models.CharField(blank=True, max_length=200)),
                ('revenue_code_source_value', models.CharField(blank=True, max_length=200)),
                ('drg_source_value', models.CharField(blank=True, max_length=200, null=True)),
                ('cost_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_cost_concept', to='data_tables.concept')),
                ('cost_event_field_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_cost_event_field_concept', to='data_tables.concept')),
                ('cost_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_cost_source_concept', to='data_tables.concept')),
                ('cost_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_cost_type_concept', to='data_tables.concept')),
                ('currency_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_currency_concept', to='data_tables.concept')),
                ('drg_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_drg_concept', to='data_tables.concept')),
                ('payer_plan_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.payerplanperiod')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('revenue_code_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cost_revenue_code_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='ConditionOccurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_occurrence_id', models.CharField(max_length=200, unique=True)),
                ('condition_start_date', models.DateField(blank=True, null=True)),
                ('condition_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('condition_end_date', models.DateField(blank=True, null=True)),
                ('condition_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=20)),
                ('condition_source_value', models.CharField(blank=True, max_length=50)),
                ('condition_status_source_value', models.CharField(blank=True, max_length=50)),
                ('condition_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_occurrence_condition_concept', to='data_tables.concept')),
                ('condition_source_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_occurrence_condition_source_concept', to='data_tables.concept')),
                ('condition_status_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_occurrence_condition_status_concept', to='data_tables.concept')),
                ('condition_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_occurrence_condition_type_concept', to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_occurrence_visit_detail', to='data_tables.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='condition_occurrence_visit_occurrence', to='data_tables.visitoccurrence')),
            ],
        ),
        migrations.CreateModel(
            name='ConditionEra',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_era_id', models.CharField(max_length=200, unique=True)),
                ('condition_era_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('condition_era_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('condition_occurrence_count', models.IntegerField(blank=True, null=True)),
                ('condition_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data_tables.person')),
            ],
        ),
        migrations.CreateModel(
            name='ConceptSynonym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept_synonym_name', models.CharField(max_length=1000)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='concept_synonym_concept', to='data_tables.concept')),
                ('language_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='concept_synonym_language_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='ConceptRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valid_start_date', models.DateField(blank=True, null=True)),
                ('valid_end_date', models.DateField(blank=True, null=True)),
                ('invalid_reason', models.CharField(blank=True, choices=[('D', 'D'), ('U', 'U')], max_length=2, null=True)),
                ('concept_id_1', models.ForeignKey(db_column='concept_id_1', on_delete=django.db.models.deletion.CASCADE, related_name='concept_relationship_concept_id_1', to='data_tables.concept')),
                ('concept_id_2', models.ForeignKey(blank=True, db_column='concept_id_2', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='concept_relationship_concept_id_2', to='data_tables.concept')),
                ('relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.relationship')),
            ],
        ),
        migrations.CreateModel(
            name='ConceptClass',
            fields=[
                ('concept_class_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('concept_class_name', models.CharField(blank=True, max_length=255)),
                ('concept_class_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='ConceptAncestor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_levels_of_separation', models.IntegerField(null=True)),
                ('max_levels_of_separation', models.IntegerField(null=True)),
                ('ancestor_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='concept_ancestor_ancestor_concept', to='data_tables.concept')),
                ('descendant_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='concept_ancestor_descendant_concept', to='data_tables.concept')),
            ],
        ),
        migrations.AddField(
            model_name='concept',
            name='concept_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.conceptclass'),
        ),
        migrations.AddField(
            model_name='concept',
            name='domain',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.domain'),
        ),
        migrations.AddField(
            model_name='concept',
            name='vocabulary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.vocabulary'),
        ),
        migrations.CreateModel(
            name='CohortDefinition',
            fields=[
                ('cohort_definition_id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('cohort_definition_name', models.CharField(max_length=255)),
                ('cohort_definition_description', models.TextField(blank=True)),
                ('cohort_definition_syntax', models.TextField(blank=True)),
                ('cohort_initiation_date', models.DateField(blank=True, null=True)),
                ('definition_type_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cohort_definition_definition_type_concept', to='data_tables.concept')),
                ('subject_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cohort_definition_subject_concept', to='data_tables.concept')),
            ],
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_start_date', models.DateField(blank=True, null=True)),
                ('cohort_end_date', models.DateField(blank=True, null=True)),
                ('cohort_definition', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='data_tables.cohortdefinition')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.person')),
            ],
        ),
        migrations.AddField(
            model_name='caresite',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.location'),
        ),
        migrations.AddField(
            model_name='caresite',
            name='place_of_service_concept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='data_tables.concept'),
        ),
    ]
